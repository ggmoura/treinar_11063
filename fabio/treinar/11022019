aula 11022019

toda interface que tem apenas um metodo a partir da java 8 é considerada interface funcional

expressoes lambda java 8 tutorialspoint

api de stream do java 8 tutorialspoint

Estrutura de map - estrutura de dados - java.util java 8

Map<Character  , List<Pesoa>> PessoasMao = HashMap<>();
tabela de hash



=-=    Tratamento de excessao  ==   =

-> Tipos: 
	Excessoes em tempo de desenvolvimento, que no caso a IDE mostra para o programador.
	Excessoes em tempo de execução.
	
	Excessoes chequed e unchequed;
	
	classe troble = classe pai de todas as excessoes que se dividem em exception e error;
	
	
	excessao de error= E o tipo de excessoes que a JVM trata dela, enquanto programador so se usa a classe exception
	
	
	excessao que retorna para funcao chamadorea = 
	
	throw new Exception(); Se na assinatura do metodo nao tiver o restante: throws Exception o metodo vai mandando 
	a excessao pra cima ate alguem ou algum metodo tratar alguma excessao. 
	 Se tiver throws Exception o metodo chamador tem que tratar com o tratamento: 
	 
	 try{
	 }catch{
	 }
	 
	 Excessoes do tipo Exception é obrigado passar pra cima ou tratar
	 tipo da excesao: 
	 
	 Chequed = RuntimeException
	 Unchequed = Exception
	 
	 throws Exception  - Subir a excessao para o metodo chamador
	 
	 
	 SerialVersionUID = 1L Serve para serializar a montagem do array de bytecode quando se vai transferir os .class para 
	 rodar em outra JVM, para ficar mais facil a JVM de destino pegar o array de byte remontar o projeto na memoria. 
	 É um tipo de maneira de ensina as JVM's trabalhar. Alguns objetos nao podem ser serializados. Mas os que pode ser
	 serializados é bom fazer para facilitar o trabalhos da JVM.
	 
	 
	 
	 
	  
	
	 